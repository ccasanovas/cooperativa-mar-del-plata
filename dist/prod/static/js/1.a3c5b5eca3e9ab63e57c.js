webpackJsonp([1],{1255:function(n,e,t){"use strict";Object.defineProperty(e,"__esModule",{value:!0}),t.d(e,"Network",function(){return s});var o=t(17);function i(){const n=window.navigator.connection||window.navigator.mozConnection||window.navigator.webkitConnection;let e="unknown";const t=n?n.type||n.effectiveType:null;if(t&&"string"==typeof t)switch(t){case"bluetooth":case"cellular":e="cellular";break;case"none":e="none";break;case"ethernet":case"wifi":case"wimax":e="wifi";break;case"other":case"unknown":e="unknown";break;case"slow-2g":case"2g":case"3g":e="cellular";break;case"4g":e="wifi"}return e}class a extends o.d{constructor(){super(),this.handleOnline=(()=>{const n={connected:!0,connectionType:i()};this.notifyListeners("networkStatusChange",n)}),this.handleOffline=(()=>{this.notifyListeners("networkStatusChange",{connected:!1,connectionType:"none"})}),"undefined"!=typeof window&&(window.addEventListener("online",this.handleOnline),window.addEventListener("offline",this.handleOffline))}async getStatus(){if(!window.navigator)throw this.unavailable("Browser does not support the Network Information API");const n=window.navigator.onLine,e=i();return{connected:n,connectionType:n?e:"none"}}}e.NetworkWeb=a;const s=new a}});